{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","constructor","state","issues","toastVisible","toastMessage","toastType","closeIssue","bind","deleteIssue","showSuccess","showError","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","search","prevSearch","props","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","setState","issueList","index","id","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","message","render","match","path","IssueDetail"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEe,MAAMA,SAAN,SAAwBC,4CAAK,CAACC,SAA9B,CAAwC;AACrDC,aAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,YAAM,EAAE,EADG;AAEXC,kBAAY,EAAE,KAFH;AAGXC,kBAAY,EAAE,EAHH;AAIXC,eAAS,EAAE;AAJA,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,SAAL,GAAiB,KAAKA,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDK,mBAAiB,GAAG;AAClB,SAAKC,QAAL;AACD;;AAEDC,oBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,cAAQ,EAAE;AAAEC,cAAM,EAAEC;AAAV;AAAZ,QAAuCH,SAA7C;AACA,UAAM;AAAEC,cAAQ,EAAE;AAAEC;AAAF;AAAZ,QAA2B,KAAKE,KAAtC;;AACA,QAAID,UAAU,KAAKD,MAAnB,EAA2B;AACzB,WAAKJ,QAAL;AACD;AACF;;AAED,QAAMA,QAAN,GAAiB;AACf,UAAM;AAAEG,cAAQ,EAAE;AAAEC;AAAF;AAAZ,QAA2B,KAAKE,KAAtC;AACA,UAAMC,MAAM,GAAG,IAAIC,wDAAJ,CAAoBJ,MAApB,CAAf;AACA,UAAMK,IAAI,GAAG,EAAb;AACA,QAAIF,MAAM,CAACG,GAAP,CAAW,QAAX,CAAJ,EAA0BD,IAAI,CAACE,MAAL,GAAcJ,MAAM,CAACG,GAAP,CAAW,QAAX,CAAd;AAE1B,UAAME,SAAS,GAAGC,QAAQ,CAACN,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,EAA0B,EAA1B,CAA1B;AACA,QAAI,CAACI,MAAM,CAACC,KAAP,CAAaH,SAAb,CAAL,EAA8BH,IAAI,CAACG,SAAL,GAAiBA,SAAjB;AAC9B,UAAMI,SAAS,GAAGH,QAAQ,CAACN,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,EAA0B,EAA1B,CAA1B;AACA,QAAI,CAACI,MAAM,CAACC,KAAP,CAAaC,SAAb,CAAL,EAA8BP,IAAI,CAACO,SAAL,GAAiBA,SAAjB;AAE9B,UAAMC,KAAK,GAAI;;;;;;;;;;;;;MAAf;AAeA,UAAMC,IAAI,GAAG,MAAMC,gEAAY,CAACF,KAAD,EAAQR,IAAR,EAAc,KAAKZ,SAAnB,CAA/B;;AACA,QAAIqB,IAAJ,EAAU;AACR,WAAKE,QAAL,CAAc;AAAE/B,cAAM,EAAE6B,IAAI,CAACG;AAAf,OAAd;AACD;AACF;;AAED,QAAM5B,UAAN,CAAiB6B,KAAjB,EAAwB;AACtB,UAAML,KAAK,GAAI;;;;;MAAf;AAMA,UAAM;AAAE5B;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAM8B,IAAI,GAAG,MAAMC,gEAAY,CAACF,KAAD,EAAQ;AAAEM,QAAE,EAAElC,MAAM,CAACiC,KAAD,CAAN,CAAcC;AAApB,KAAR,EAC7B,KAAK1B,SADwB,CAA/B;;AAEA,QAAIqB,IAAJ,EAAU;AACR,WAAKE,QAAL,CAAeI,SAAD,IAAe;AAC3B,cAAMC,OAAO,GAAG,CAAC,GAAGD,SAAS,CAACnC,MAAd,CAAhB;AACAoC,eAAO,CAACH,KAAD,CAAP,GAAiBJ,IAAI,CAACQ,WAAtB;AACA,eAAO;AAAErC,gBAAM,EAAEoC;AAAV,SAAP;AACD,OAJD;AAKD,KAND,MAMO;AACL,WAAKzB,QAAL;AACD;AACF;;AAED,QAAML,WAAN,CAAkB2B,KAAlB,EAAyB;AACvB,UAAML,KAAK,GAAI;;MAAf;AAGA,UAAM;AAAE5B;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAM;AAAEe,cAAQ,EAAE;AAAEwB,gBAAF;AAAYvB;AAAZ,OAAZ;AAAkCwB;AAAlC,QAA8C,KAAKtB,KAAzD;AACA,UAAM;AAAEiB;AAAF,QAASlC,MAAM,CAACiC,KAAD,CAArB;AACA,UAAMJ,IAAI,GAAG,MAAMC,gEAAY,CAACF,KAAD,EAAQ;AAAEM;AAAF,KAAR,EAAgB,KAAK1B,SAArB,CAA/B;;AACA,QAAIqB,IAAI,IAAIA,IAAI,CAACW,WAAjB,EAA8B;AAC5B,WAAKT,QAAL,CAAeI,SAAD,IAAe;AAC3B,cAAMC,OAAO,GAAG,CAAC,GAAGD,SAAS,CAACnC,MAAd,CAAhB;;AACA,YAAIsC,QAAQ,KAAM,WAAUJ,EAAG,EAA/B,EAAkC;AAChCK,iBAAO,CAACE,IAAR,CAAa;AAAEH,oBAAQ,EAAE,SAAZ;AAAuBvB;AAAvB,WAAb;AACD;;AACDqB,eAAO,CAACM,MAAR,CAAeT,KAAf,EAAsB,CAAtB;AACA,eAAO;AAAEjC,gBAAM,EAAEoC;AAAV,SAAP;AACD,OAPD;AAQA,WAAK7B,WAAL,CAAkB,iBAAgB2B,EAAG,gBAArC;AACD,KAVD,MAUO;AACL,WAAKvB,QAAL;AACD;AACF;;AAEDJ,aAAW,CAACoC,OAAD,EAAU;AACnB,SAAKZ,QAAL,CAAc;AACZ9B,kBAAY,EAAE,IADF;AACQC,kBAAY,EAAEyC,OADtB;AAC+BxC,eAAS,EAAE;AAD1C,KAAd;AAGD;;AAEDK,WAAS,CAACmC,OAAD,EAAU;AACjB,SAAKZ,QAAL,CAAc;AACZ9B,kBAAY,EAAE,IADF;AACQC,kBAAY,EAAEyC,OADtB;AAC+BxC,eAAS,EAAE;AAD1C,KAAd;AAGD;;AAEDM,cAAY,GAAG;AACb,SAAKsB,QAAL,CAAc;AAAE9B,kBAAY,EAAE;AAAhB,KAAd;AACD;;AAED2C,QAAM,GAAG;AACP,UAAM;AAAE5C;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAM;AAAEE,kBAAF;AAAgBE,eAAhB;AAA2BD;AAA3B,QAA4C,KAAKH,KAAvD;AACA,UAAM;AAAE8C;AAAF,QAAY,KAAK5B,KAAvB;AACA,wBACE,2DAAC,4CAAD,CAAO,QAAP,qBACE,2DAAC,qDAAD,qBACE,2DAAC,qDAAD,CAAO,OAAP,qBACE,2DAAC,qDAAD,CAAO,KAAP;AAAa,YAAM;AAAnB,gBADF,CADF,eAIE,2DAAC,qDAAD,CAAO,IAAP;AAAY,iBAAW;AAAvB,oBACE,2DAAC,wDAAD,OADF,CAJF,CADF,eASE,2DAAC,uDAAD;AACE,YAAM,EAAEjB,MADV;AAEE,gBAAU,EAAE,KAAKI,UAFnB;AAGE,iBAAW,EAAE,KAAKE;AAHpB,MATF,eAcE,2DAAC,sDAAD;AAAO,UAAI,EAAG,GAAEuC,KAAK,CAACC,IAAK,MAA3B;AAAkC,eAAS,EAAEC,wDAAWA;AAAxD,MAdF,eAeE,2DAAC,kDAAD;AACE,aAAO,EAAE9C,YADX;AAEE,eAAS,EAAE,KAAKQ,YAFlB;AAGE,aAAO,EAAEN;AAHX,OAKGD,YALH,CAfF,CADF;AAyBD;;AArJoD,C","file":"server.f92712c759c501c84617.hot-update.js","sourcesContent":["import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Route } from 'react-router-dom';\nimport { Panel } from 'react-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class IssueList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      issues: [],\n      toastVisible: false,\n      toastMessage: '',\n      toastType: 'info',\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search } } = this.props;\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n    ) {\n      issueList(\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n      ) {\n        id title status owner\n        created effort due\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, this.showError);\n    if (data) {\n      this.setState({ issues: data.issueList });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n      issueUpdate(id: $id, changes: { status: Closed }) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const { issues } = this.state;\n    const data = await graphQLFetch(query, { id: issues[index].id },\n      this.showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, this.showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n      this.showSuccess(`Deleted issue ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { issues } = this.state;\n    const { toastVisible, toastType, toastMessage } = this.state;\n    const { match } = this.props;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <Route path={`${match.path}/:id`} component={IssueDetail} />\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}